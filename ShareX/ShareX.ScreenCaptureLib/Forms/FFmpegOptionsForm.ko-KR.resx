<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="$this.Text" xml:space="preserve">
    <value>ShareX - FFmpeg 설정</value>
  </data>
  <data name="btnCopyPreview.Text" xml:space="preserve">
    <value>복사</value>
  </data>
  <data name="btnDownload.Text" xml:space="preserve">
    <value>다운로드</value>
  </data>
  <data name="tbAACBitrate.ToolTip" xml:space="preserve">
    <value>기본값은 128k입니다.</value>
  </data>
  <data name="tbVorbis_qscale.ToolTip" xml:space="preserve">
    <value>범위는 0부터 10까지이며, 10이 최고 품질입니다. 3~6 사이에서 조절하면 괜찮습니다. 기본값은 3입니다.</value>
  </data>
  <data name="btnRefreshSources.Text" xml:space="preserve">
    <value>새로고침</value>
  </data>
  <data name="btnTest.Text" xml:space="preserve">
    <value>CMD로 테스트</value>
  </data>
  <data name="cbCustomCommands.Text" xml:space="preserve">
    <value>명령 직접 입력</value>
  </data>
  <data name="gbCommandLinePreview.Text" xml:space="preserve">
    <value>명령줄 미리보기</value>
  </data>
  <data name="gbSource.Text" xml:space="preserve">
    <value>소스</value>
  </data>
  <data name="lblAACQuality.Text" xml:space="preserve">
    <value>비트레이트:</value>
  </data>
  <data name="lblAudioCodec.Text" xml:space="preserve">
    <value>오디오 코덱:</value>
  </data>
  <data name="lblAudioSource.Text" xml:space="preserve">
    <value>오디오 소스:</value>
  </data>
  <data name="lblCodec.Text" xml:space="preserve">
    <value>비디오 코덱:</value>
  </data>
  <data name="lblMP3Quality.Text" xml:space="preserve">
    <value>품질:</value>
  </data>
  <data name="lblVideoSource.Text" xml:space="preserve">
    <value>비디오 소스:</value>
  </data>
  <data name="lblVorbisQuality.Text" xml:space="preserve">
    <value>품질:</value>
  </data>
  <data name="gbCommandLineArgs.Text" xml:space="preserve">
    <value>추가 명령줄 인자</value>
  </data>
  <data name="gbCodecs.Text" xml:space="preserve">
    <value>코덱</value>
  </data>
  <data name="nudx264CRF.ToolTip" xml:space="preserve">
    <value>항율 인자 (CRF): 겂의 범위는 0부터 51까지이며, 0은 무손실, 30이 기본값, 그리고 51이 가능한 최저 품질입니다.
값이 높아질수록 품질은 낮아지지만, 파일 크기 또한 줄어듭니다.</value>
  </data>
  <data name="tbMP3_qscale.ToolTip" xml:space="preserve">
    <value>범위는 0부터 9까지이며, 낮을수록 더 나은 품질을 제공합니다. 0부터 3까지는 보통 깨끗한 결과를, 기본값인 4는 겉보기에 깨끗한 결과를 내놓으며, 6은 "그럭저럭 볼 만한" 품질의 결과를 내놓습니다.</value>
  </data>
  <data name="nudXvidQscale.ToolTip" xml:space="preserve">
    <value>1이 최고 품질/최대 파일 크기, 31이 최소 품질/최소 파일 크기입니다.</value>
  </data>
  <data name="cbGIFDither.ToolTip" xml:space="preserve">
    <value>기본값은 sierra2_4a입니다.</value>
  </data>
  <data name="lblVP8Bitrate.Text" xml:space="preserve">
    <value>가변 비트레이트:</value>
  </data>
  <data name="lblNVENCPreset.Text" xml:space="preserve">
    <value>프리셋:</value>
  </data>
  <data name="lblNVENCBitrate.Text" xml:space="preserve">
    <value>비트레이트:</value>
  </data>
  <data name="btnInstallHelperDevices.Text" xml:space="preserve">
    <value>촬영 디바이스 설치하기</value>
  </data>
  <data name="lblHelperDevices.Text" xml:space="preserve">
    <value>"screen-capture-recorder"와 "virtual-audio-capturer" 비디오/오디오 소스를 설치합니다.</value>
  </data>
  <data name="lblGIFStatsMode.Text" xml:space="preserve">
    <value>팔레트 모드:</value>
  </data>
  <data name="lblGIFDither.Text" xml:space="preserve">
    <value>디더링 모드:</value>
  </data>
  <data name="gbFFmpegExe.Text" xml:space="preserve">
    <value>FFmpeg 경로</value>
  </data>
  <data name="cbOverrideFFmpegPath.Text" xml:space="preserve">
    <value>경로 직접 입력</value>
  </data>
  <data name="lblx264Preset.Text" xml:space="preserve">
    <value>프리셋:</value>
  </data>
  <data name="lblXvidQscale.Text" xml:space="preserve">
    <value>가변 비트레이트:</value>
  </data>
  <data name="pbAudioCodecWarning.ToolTip" xml:space="preserve">
    <value>이 오디오 코덱은 선택된 비디오 컨테이너에 의해 지원되지 않습니다.</value>
  </data>
  <data name="cbGIFStatsMode.ToolTip" xml:space="preserve">
    <value>기본값은 full입니다.</value>
  </data>
  <data name="cbx264Preset.ToolTip" xml:space="preserve">
    <value>더 빠른 프리셋 = 인코딩이 더 빨라지지만 파일 크기가 커집니다.
더 느린 프리셋 = 인코딩이 더 느려지지만 파일 크기가 작아집니다.
화면 녹화와 같은 실시간 인코딩을 하려면 최대한 빠른 프리셋을 쓰는 것이 좋습니다.</value>
  </data>
  <data name="pbx264PresetWarning.ToolTip" xml:space="preserve">
    <value>화면 녹화와 같은 실시간 인코딩에는 최대한 빠른 프리셋을 쓰는 것을 권장합니다.
최대한 빠른 프리셋을 쓰지 않으면 심한 프레임 드랍이 생길 수 있습니다.</value>
  </data>
</root>