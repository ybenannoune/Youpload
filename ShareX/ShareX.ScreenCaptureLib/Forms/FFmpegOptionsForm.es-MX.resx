<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="$this.Text" xml:space="preserve">
    <value>ShareX - Opciones de grabación de pantalla</value>
  </data>
  <data name="btnCopyPreview.Text" xml:space="preserve">
    <value>Copiar</value>
  </data>
  <data name="btnDownload.Text" xml:space="preserve">
    <value>Descargar</value>
  </data>
  <data name="btnInstallHelperDevices.Text" xml:space="preserve">
    <value>Instalar dispositivos de grabación</value>
  </data>
  <data name="btnRefreshSources.Text" xml:space="preserve">
    <value>Actualizar</value>
  </data>
  <data name="btnTest.Text" xml:space="preserve">
    <value>Probar con la ventana de comandos</value>
  </data>
  <data name="cbCustomCommands.Text" xml:space="preserve">
    <value>Usar comandos personalizados</value>
  </data>
  <data name="cbGIFDither.ToolTip" xml:space="preserve">
    <value>Predefinido: sierra2_4a.</value>
  </data>
  <data name="cbGIFStatsMode.ToolTip" xml:space="preserve">
    <value>Predefinido: completo.</value>
  </data>
  <data name="cbOverrideFFmpegPath.Text" xml:space="preserve">
    <value>Usar ubicación personalizada</value>
  </data>
  <data name="cbx264Preset.ToolTip" xml:space="preserve">
    <value>Preajuste más rápido: Codificación más rápida pero archivo más grande.
Preajuste más lento: Codificación más lenta pero archivo más pequeño.
El preajuste debe ser el más rápido para codificación en tiempo real (ej. grabación de pantalla).</value>
  </data>
  <data name="gbCodecs.Text" xml:space="preserve">
    <value>Códecs</value>
  </data>
  <data name="gbCommandLineArgs.Text" xml:space="preserve">
    <value>Argumentos de línea de comandos adicionales</value>
  </data>
  <data name="gbCommandLinePreview.Text" xml:space="preserve">
    <value>Vista previa de línea de comandos</value>
  </data>
  <data name="gbFFmpegExe.Text" xml:space="preserve">
    <value>Ubicación del códec de FFmpeg</value>
  </data>
  <data name="gbSource.Text" xml:space="preserve">
    <value>Fuentes</value>
  </data>
  <data name="lblAACQuality.Text" xml:space="preserve">
    <value>Tasa de bits:</value>
  </data>
  <data name="lblAudioCodec.Text" xml:space="preserve">
    <value>Códec de audio:</value>
  </data>
  <data name="lblAudioSource.Text" xml:space="preserve">
    <value>Fuente de audio:</value>
  </data>
  <data name="lblCodec.Text" xml:space="preserve">
    <value>Códec de video:</value>
  </data>
  <data name="lblGIFDither.Text" xml:space="preserve">
    <value>Modo de difuminado:</value>
  </data>
  <data name="lblGIFStatsMode.Text" xml:space="preserve">
    <value>Modo de paleta:</value>
  </data>
  <data name="lblHelperDevices.Text" xml:space="preserve">
    <value>Instala fuentes de audio y video "screen-capture-recorder" y "virtual-audio-capturer".</value>
  </data>
  <data name="lblMP3Quality.Text" xml:space="preserve">
    <value>Calidad:</value>
  </data>
  <data name="lblNVENCBitrate.Text" xml:space="preserve">
    <value>Tasa de bits:</value>
  </data>
  <data name="lblNVENCPreset.Text" xml:space="preserve">
    <value>Preajuste:</value>
  </data>
  <data name="lblVideoSource.Text" xml:space="preserve">
    <value>Fuente de video:</value>
  </data>
  <data name="lblVorbisQuality.Text" xml:space="preserve">
    <value>Calidad:</value>
  </data>
  <data name="lblVP8Bitrate.Text" xml:space="preserve">
    <value>Tasa de bits variable:</value>
  </data>
  <data name="lblx264Preset.Text" xml:space="preserve">
    <value>Preajuste:</value>
  </data>
  <data name="lblXvidQscale.Text" xml:space="preserve">
    <value>Tasa de bits variable:</value>
  </data>
  <data name="nudx264CRF.ToolTip" xml:space="preserve">
    <value>Factor de velocidad constante (CRF): el valor puede estar entre 0 y 51; 0 es sin pérdida, 30 es predefinido y 51 es el peor posible.
Un valor alto produce un archivo de mala calidad pero menor tamaño.</value>
  </data>
  <data name="nudXvidQscale.ToolTip" xml:space="preserve">
    <value>1 es la calidad más alta y archivo más grande, 31 es la calidad más baja y archivo más pequeño.</value>
  </data>
  <data name="pbAudioCodecWarning.ToolTip" xml:space="preserve">
    <value>El códec de audio no está soportado por el contenedor de video seleccionado.</value>
  </data>
  <data name="pbx264PresetWarning.ToolTip" xml:space="preserve">
    <value>Para la codificación en tiempo real, como la grabación de pantalla, se recomienda el preajuste más rápido.
De lo contrario, la grabación se desfasará y se perderán fotogramas.</value>
  </data>
  <data name="tbAACBitrate.ToolTip" xml:space="preserve">
    <value>Predefinido: 128k.</value>
  </data>
  <data name="tbMP3_qscale.ToolTip" xml:space="preserve">
    <value>El rango es 0 a 9, el valor más bajo es calidad más alta. 0 a 3 normalmente producen resultados transparentes, 4 (predefinido) se acerca la transparencia perceptible y 6 produce una calidad "razonable"</value>
  </data>
  <data name="tbVorbis_qscale.ToolTip" xml:space="preserve">
    <value>El rango es 0 a 10. 10 es la calidad más alta, 3 a 6 es un buen margen para probar. 3 es el valor predefinido.</value>
  </data>
  <data name="btnFFmpegBrowse.Text" xml:space="preserve">
    <value>...</value>
  </data>
  <data name="btnHelperDevicesHelp.Text" xml:space="preserve">
    <value>?</value>
  </data>
  <data name="lblAMFQuality.Text" xml:space="preserve">
    <value>Calidad:</value>
  </data>
  <data name="lblAMFUsage.Text" xml:space="preserve">
    <value>Uso:</value>
  </data>
  <data name="lblOpusQuality.Text" xml:space="preserve">
    <value>Tasa de bits:</value>
  </data>
  <data name="lblQSVBitrate.Text" xml:space="preserve">
    <value>Tasa de bits:</value>
  </data>
  <data name="lblQSVPreset.Text" xml:space="preserve">
    <value>Preajuste:</value>
  </data>
  <data name="tbOpusBitrate.ToolTip" xml:space="preserve">
    <value>Predefinido: 128k.</value>
  </data>
  <data name="tpX264.Text" xml:space="preserve">
    <value>x264 / x265</value>
  </data>
  <data name="lblVP8BitrateK.Text" xml:space="preserve">
    <value>kbit/s</value>
  </data>
  <data name="tpVpx.Text" xml:space="preserve">
    <value>VP8</value>
  </data>
  <data name="tpXvid.Text" xml:space="preserve">
    <value>Xvid</value>
  </data>
  <data name="tpNVENC.Text" xml:space="preserve">
    <value>NVENC</value>
  </data>
  <data name="tpGIF.Text" xml:space="preserve">
    <value>GIF</value>
  </data>
  <data name="tbAMF.Text" xml:space="preserve">
    <value>AMF</value>
  </data>
  <data name="tbQSV.Text" xml:space="preserve">
    <value>QuickSync</value>
  </data>
  <data name="tpAAC.Text" xml:space="preserve">
    <value>AAC</value>
  </data>
  <data name="tpVorbis.Text" xml:space="preserve">
    <value>Vorbis</value>
  </data>
  <data name="tpMP3.Text" xml:space="preserve">
    <value>MP3</value>
  </data>
  <data name="tpOpus.Text" xml:space="preserve">
    <value>Opus</value>
  </data>
  <data name="lblx264CRF.Text" xml:space="preserve">
    <value>CRF:</value>
  </data>
</root>